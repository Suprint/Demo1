package com.mpay.plus.system;import java.util.Vector;import android.content.Context;import android.content.Intent;import android.os.AsyncTask;import android.os.Bundle;import android.text.Editable;import android.text.TextWatcher;import android.view.KeyEvent;import android.view.View;import android.widget.Button;import android.widget.CheckBox;import android.widget.CompoundButton;import android.widget.EditText;import android.widget.RelativeLayout;import android.widget.TextView;import com.actionbarsherlock.app.ActionBar;import com.actionbarsherlock.view.Menu;import com.actionbarsherlock.view.MenuItem;import com.mpay.agent.R;import com.mpay.business.IProcess;import com.mpay.business.ServiceCore;import com.mpay.business.ThreadThucThi;import com.mpay.mplus.dialog.DialogPending;import com.mpay.plus.config.Config;import com.mpay.plus.database.AnyObject;import com.mpay.plus.database.DBAdapter;import com.mpay.plus.database.User;import com.mpay.plus.lib.MPlusLib;import com.mpay.plus.mplus.AMPlusCore;import com.mpay.plus.mplus.FrmMain;import com.mpay.plus.util.Util;/** *  * @author hadvlop@gmail.com *  */public class FrmRegistrationInfo extends AMPlusCore implements IProcess {	private EditText et_fullName = null;	private EditText et_cmtnd = null;	private EditText et_ngaythangnamsinh = null;	private EditText et_cautraloibimat = null;	private Button btn_cauhoibimat = null;	private Button btn_Registry_Info = null;	private CheckBox checkActiveInfo = null;	private RelativeLayout animation = null;	private RelativeLayout animation_1 = null;	private TextView title_anomation = null;	private TextView title_anomation_1 = null;		private String question = "";	private String qesID = "0";	private String sType = "0";	public static int valueIndex = 0;	private boolean isFlag = false;		private static Vector<AnyObject> itemQuestion = null;		@Override	public void onCreate(Bundle savedInstanceState) {		super.onCreate(savedInstanceState);//	    Window window = getWindow();//	    window.addFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON);//	    setTheme(R.style.Theme_MPay_Camera);		setContentView(R.layout.old_registry_info);		ActionBar actionBar = getSupportActionBar();		actionBar.setHomeButtonEnabled(true);		actionBar.setIcon(R.drawable.icon_navigation_previous_item);				Bundle bund = getIntent().getExtras();		if(bund != null)			isFlag = bund.getBoolean("isFlag");		if(isFlag){			onCreateMyDialog(MPIN).show();		}else {			setControls();		}	}		@Override	public void goBack() {		et_fullName = null;		et_cmtnd = null;		et_ngaythangnamsinh = null;		et_cautraloibimat = null;		btn_cauhoibimat = null;		btn_Registry_Info = null;		itemQuestion = null;		checkActiveInfo = null;		animation = null;		animation_1 = null;		title_anomation = null;		title_anomation_1 = null;		super.goBack();	}		@Override	public boolean onCreateOptionsMenu(Menu menu) {//		getSupportMenuInflater().inflate(R.menu.main, menu);		return super.onCreateOptionsMenu(menu);	}		@Override	public boolean onMenuItemSelected(int featureId, MenuItem item) {		boolean result = true;		if (!isBusy) {			// Xu ly menu			switch (item.getItemId()) {			case android.R.id.home:				goBack();				break;			default:				result = super.onMenuItemSelected(featureId, item);				break;			}		} else			result = false;		return result;	}		private void setControls() {		valueIndex = 0;		setTitle(getString(R.string.info_hint));		et_fullName = (EditText) findViewById(R.id.et_fullName);		et_cmtnd = (EditText) findViewById(R.id.et_cmtnd);		et_ngaythangnamsinh = (EditText) findViewById(R.id.et_ngaythangnamsinh);		et_cautraloibimat = (EditText) findViewById(R.id.et_cautraloibimat);		btn_cauhoibimat = (Button) findViewById(R.id.btn_cauhoibimat);		btn_Registry_Info = (Button) findViewById(R.id.btn_Registry_Info);		checkActiveInfo = (CheckBox) findViewById(R.id.checkActiveInfo);		animation = (RelativeLayout) findViewById(R.id.animation);		animation_1 = (RelativeLayout) findViewById(R.id.animation_1);		title_anomation = (TextView) findViewById(R.id.title_anomation);		title_anomation_1 = (TextView) findViewById(R.id.title_anomation_1);				getData();				if (getQuestionItem() == null || getQuestionItem().size() <= 0) {			User.isFisrt = true;			new PingTask(FrmRegistrationInfo.this).execute();		}else {			setData();		}			}		private void getData() {		if(itemQuestion == null){			itemQuestion = new Vector<AnyObject>();		}		itemQuestion = getDba().getKQuestion(DBAdapter.DB_GROUP_TYPE_QUESTION);			}		private void setData() {		sType = "0";		isGONE();				if(!"".equals(User.sCustName)){			et_fullName.setText(User.sCustName);		}if(!"".equals(User.sCustCMND)){			et_cmtnd.setText(User.sCustCMND);		}if(!"".equals(User.sCustBirthday)){			et_ngaythangnamsinh.setText(User.sCustBirthday);		}if(!"".equals(User.sCustQesID)){			setQesID(User.sCustQesID);//		}if(!"".equals(User.sCustAnser)){//			et_cautraloibimat.setText(User.sCustAnser);		}else {			isVISIBLE();			sType = "1";			checkActiveInfo.setChecked(true);			checkActiveInfo.setVisibility(CheckBox.GONE);		}		setEvent();	}		private void setEvent() {		et_ngaythangnamsinh.addTextChangedListener(new TextWatcher() {						@Override			public void onTextChanged(CharSequence s, int start, int before, int count) {				beforesSelection = before;				selection = start;			}						@Override			public void beforeTextChanged(CharSequence s, int start, int count,					int after) {							}						@Override			public void afterTextChanged(Editable s) {				Util.ChuanHoaDate(et_ngaythangnamsinh, this);			}		});				btn_cauhoibimat.setOnClickListener(new View.OnClickListener() {						@Override			public void onClick(View v) {				if(getQuestionItem() != null && getQuestionItem().size() > 0){					FLAG_DIALOG = 1;					onCreateMyDialog(LIST_OTHER).show();				}else {					sThongBao = getString(R.string.msg_message_emptyquestion);					onCreateMyDialog(THONG_BAO).show();				}			}		});				btn_Registry_Info.setOnClickListener(new View.OnClickListener() {						@Override			public void onClick(View v) {				if(checkData()){					sThongBao = getInfo();					setMessageConfirm(getString(R.string.title_xacnhangiaodich), sThongBao, "", "",							"", getString(R.string.btn_dongy), getString(R.string.btn_huy), false, true);					onCreateMyDialog(XAC_NHAN).show();				}else {					onCreateMyDialog(THONG_BAO).show();				}			}		});				checkActiveInfo.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {						@Override			public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {				if(checkActiveInfo.isChecked()){										setMessageConfirm(getString(R.string.title_xacnhangiaodich), "", "", "", getString(R.string.confirm_change_info), getString(R.string.btn_dongy), getString(R.string.btn_huy), false, false);					onCreateMyDialog(XAC_NHAN).show();									}else {//					et_cautraloibimat.setText(User.sCustAnser);					sType = "0";					isGONE();				}			}		});	}		private void isVISIBLE() {		title_anomation.setVisibility(TextView.VISIBLE);		title_anomation_1.setVisibility(TextView.VISIBLE);		animation.setVisibility(RelativeLayout.VISIBLE);		animation_1.setVisibility(RelativeLayout.VISIBLE);	}	private void isGONE() {		title_anomation.setVisibility(TextView.GONE);		title_anomation_1.setVisibility(TextView.GONE);		animation.setVisibility(RelativeLayout.GONE);		animation_1.setVisibility(RelativeLayout.GONE);	}	@Override	public void cmdNextMPIN() {		setControls();		super.cmdNextMPIN();	}		@Override	public void cmdBackMPIN() {		goBack();		super.cmdBackMPIN();	}		@Override	public void cmdNextXacNhan(String data) {		goNext();		super.cmdNextXacNhan(data);	}	@Override	public void cmdBackXacNhan() {		checkActiveInfo.setChecked(false);		super.cmdBackXacNhan();	}		@Override	public void cmdNextXacNhan() {		isVISIBLE();		et_cautraloibimat.setText("");		sType = "1";		super.cmdNextXacNhan();	}		@Override	public boolean onKeyDown(int keyCode, KeyEvent event) {		if(keyCode == KeyEvent.KEYCODE_BACK){			goBack();		}		return super.onKeyDown(keyCode, event);	}		@Override	public void cmdChoncauhoiList(int value, AnyObject data) {		valueIndex = value;		setQesID(data.getsID());		setQuestion(data.getsContent());		btn_cauhoibimat.setText(getQuestion());		super.cmdChoncauhoiList(value, data);	}	@Override	public void cmdNextThongBao() {		if(isFinished && isFlag == false){			Intent intent = new Intent(this, FrmMain.class);			intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);			startActivity(intent);			goBack();		}else if(isFinished) {			goBack();//		}else {//			onCreateMyDialog(MPIN).show();		}		super.cmdNextThongBao();	} 	private String getInfo() {		StringBuffer info = new StringBuffer();		 info.append(getString(R.string.fullName));		 info.append(": <b>");		 info.append(getFullName());		 info.append("</b><br/>");		 info.append(getString(R.string.cmnd));		 info.append(": <b>");		 info.append(getCMND());		 		 String ngaysinh = getString(R.string.ngay_sinh);		 info.append("</b><br/>");		 info.append(ngaysinh.indexOf(Config.FIELD_REQUIRED.trim()) >=0 ? ngaysinh.replace(Config.FIELD_REQUIRED.trim(), "") : ngaysinh);		 info.append(": <b>");		 info.append(getNgaySinh());		 info.append("</b>");		 if(checkActiveInfo.isChecked()){			 info.append("<br/>");			 info.append(getString(R.string.hint_cauhoibimat_));			 info.append(": <b>");			 info.append(getQuestion());				 info.append("</b><br/>");			 info.append(getString(R.string.hint_cautraloi));			 info.append(": <b>");			 info.append(getCauTraLoi() + "</b>");		 }		 return info.toString();	}		private String  getFullName() {		return Util.keepContent(et_fullName.getText().toString());	}	private String getCMND() {		return Util.keepContent(et_cmtnd.getText().toString());	}		private String getNgaySinh() {		return Util.formatDate(Util.keepNumbersOnly(et_ngaythangnamsinh.getText().toString()));	}		private String getCauTraLoi() {		return Util.keepContent(et_cautraloibimat.getText().toString());	}//	private String getCauHoi() {//		return btn_cauhoibimat.getText().toString();//	}		public String getQuestion() {		return question;	}	public void setQuestion(String question) {		this.question = question;	}	private String getQesID() {		return String.valueOf(qesID);	}	private void setQesID(String qesID) {		this.qesID = qesID;	}		public static Vector<AnyObject> getQuestionItem() {		return itemQuestion;	}	private boolean checkData() {		sThongBao = "";		String ngaysinh = getString(R.string.ngay_sinh);		ngaysinh = (ngaysinh.indexOf("(*)") >= 0 ? ngaysinh.replace("(*)", "") : ngaysinh);		if("".equals(getFullName())){			sThongBao = getString(R.string.phai_nhap) + " " + getString(R.string.fullName);			et_fullName.requestFocus();			return false;		}if("".equals(getCMND())){			sThongBao = getString(R.string.phai_nhap) + " " + getString(R.string.cmnd);			et_cmtnd.requestFocus();			return false;		}if("".equals(getNgaySinh())){			sThongBao = getString(R.string.phai_nhap) + " " + ngaysinh;			et_ngaythangnamsinh.requestFocus();			return false;		}if(getNgaySinh().length() < Config.iNGAYSINH_MIN_LENGTH){			sThongBao = getString(R.string.ngay_sinh_wrong) + " " +getString(R.string.nhap_lai);			et_ngaythangnamsinh.requestFocus();			return false;		}		if(checkActiveInfo.isChecked() || "".equals(User.sCustQesID)){			if(valueIndex == 0){				sThongBao = getString(R.string.confirm_empty_cauhoi);				btn_cauhoibimat.requestFocus();				return false;			}if("".equals(getCauTraLoi())){				sThongBao = getString(R.string.phai_nhap) + " " + getString(R.string.hint_cauhoibimat);				et_cautraloibimat.requestFocus();				return false;			}if(getCauTraLoi().length() < Config.iANSWER_ACC_MIN_LENGTH || getCauTraLoi().length() > Config.iANSWER_ACC_MAX_LENGTH){				sThongBao = getString(R.string.answer_bimat_wrong);				et_cautraloibimat.requestFocus();				return false;			}		}				return true;	}		@Override	public void goNext() {		threadThucThi = new ThreadThucThi(this);		threadThucThi.setIProcess(this, (byte)0);		threadThucThi.Start();		super.goNext();	}		@Override	public void processDataSend(byte iTag) {		ServiceCore.TaskInfoAccount(sType, getFullName(), getNgaySinh(), getCMND(), getQesID(), getCauTraLoi());	}	@Override	public void processDataReceived(String dataReceived, byte iTag, byte iTagErr) {				if (dataReceived.startsWith("val:")) {			isFinished = true;			User.sCustName = getFullName();			User.sCustCMND = getCMND();			User.sCustBirthday = getNgaySinh();			User.sCustQesID = getQesID();			User.sCustAnser = getCauTraLoi();			saveUserTable();			sThongBao = getString(R.string.msg_update_success);						onCreateMyDialog(THONG_BAO).show();		}else {			sThongBao = Util.sCatVal(dataReceived);			onCreateMyDialog(THONG_BAO).show();		}	}	private class PingTask extends AsyncTask<String, String, String> {		private DialogPending dialogpendding;				public PingTask(Context context) {			dialogpendding = new DialogPending(context);			dialogpendding.setTitles(getString(R.string.dang_xu_ly_title));			dialogpendding.setContents(getString(R.string.dang_xu_ly));		}				@Override		protected void onProgressUpdate(String... values) {			super.onProgressUpdate(values);		}				@Override		protected void onPreExecute() {			dialogpendding.show();			super.onPreExecute();		}		@Override		protected String doInBackground(String... aurl) {			try {				Config.itimeReceive = 15000;				ServiceCore.TaskPing();			} catch (Exception ex) {				MPlusLib.debug(TAG, "doInBackground", ex);			}			return null;		}		@Override		protected void onPostExecute(String result) {			Config.itimeReceive = 70000;			if(dialogpendding != null && dialogpendding.isShowing()){				try {					dialogpendding.dismiss();				} catch (Exception e) {				}			}						sThongBao = AMPlusCore.mpConnect.getDataReceive2();			if(sThongBao.startsWith("err:")){				sThongBao = sThongBao.substring(4, sThongBao.length());				onCreateMyDialog(THONG_BAO).show();			}else if(sThongBao.startsWith("val:")) {				getData();				setData();			}else {				// Lỗi khác				sThongBao = getString(R.string.result_error);				onCreateMyDialog(THONG_BAO).show();			}			super.onPostExecute(result);		}	}}