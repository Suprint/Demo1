package com.mpay.plus.system;import java.util.UUID;import android.content.Intent;import android.os.Bundle;import android.text.Editable;import android.text.InputType;import android.text.TextWatcher;import android.text.method.PasswordTransformationMethod;import android.view.KeyEvent;import android.view.View;import android.view.View.OnKeyListener;import android.view.Window;import android.view.WindowManager;import android.widget.Button;import android.widget.EditText;import android.widget.ImageView;import com.mpay.agent.R;import com.mpay.business.IProcess;import com.mpay.business.ServiceCore;import com.mpay.business.ThreadThucThi;import com.mpay.plus.config.Config;import com.mpay.plus.database.DBAdapter;import com.mpay.plus.database.User;import com.mpay.plus.lib.MPlusLib;import com.mpay.plus.mplus.AMPlusCore;import com.mpay.plus.mplus.FrmMain;import com.mpay.plus.util.Util;/** *  * @author quyenlm.vn@gmail.com *  */public class FrmRegistration extends AMPlusCore implements IProcess {	private EditText etTel = null;	private EditText etPassword = null;	private EditText etConfirmPassword = null;	private ImageView imageback = null;	private Button btn_Registry = null;	private Button btn_quenMatkhau = null;	private String OTP = "";	public void onCreate(Bundle savedInstanceState) {		super.onCreate(savedInstanceState);	    Window window = getWindow();	    window.addFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON);	    setTheme(R.style.Theme_MPay_Camera);		setContentView(R.layout.old_registry);		setControls();	}	private void setControls() {		try {			setTitle("");			etTel = (EditText) findViewById(R.id.et_tel);			etPassword = (EditText) findViewById(R.id.et_password);			etConfirmPassword = (EditText) findViewById(R.id.et_password_confirm);			etPassword.setInputType(InputType.TYPE_CLASS_PHONE);			etPassword.setTransformationMethod(PasswordTransformationMethod					.getInstance());			etConfirmPassword.setInputType(InputType.TYPE_CLASS_PHONE);			etConfirmPassword.setTransformationMethod(PasswordTransformationMethod					.getInstance());			imageback = (ImageView) findViewById(R.id.imageback);			btn_Registry = (Button) findViewById(R.id.btn_Registry);			btn_quenMatkhau = (Button) findViewById(R.id.btn_quenMatkhau);//			// Gia lap Du lieu//			//			etTel.setText("0975-5782-47");//			etPassword.setText("123456");//			etConfirmPassword.setText("123456");			setEvent();			isDangKyForm = true;		}catch (Exception e) {			MPlusLib.debug(TAG, "setControls");		}	}	public void onDestroy() {		etTel = null;		etPassword = null;		super.onDestroy();	}	@Override	public boolean onKeyDown(int keyCode, KeyEvent event) {		switch (keyCode) {		case KeyEvent.KEYCODE_BACK:			startActivity(new Intent(FrmRegistration.this, FrmMain.class));			goBack();			break;		}		return super.onKeyDown(keyCode, event);	}		@Override	public boolean onKeyUp(int keyCode, KeyEvent event) {		if(keyCode == KeyEvent.KEYCODE_ENTER){			hideKeyBoards();		}		return super.onKeyUp(keyCode, event);	}		private void setEvent() {		etTel.addTextChangedListener(new TextWatcher() {			@Override			public void afterTextChanged(Editable s) {				Util.ChuanHoaPhoneNumber(etTel, this, selection, beforesSelection);			}			@Override			public void beforeTextChanged(CharSequence s, int start, int count,					int after) {			}			@Override			public void onTextChanged(CharSequence s, int start, int before,					int count) {				beforesSelection = before;				selection = start;			}		});		etTel.setOnKeyListener(new OnKeyListener() {			public boolean onKey(View v, int keyCode, KeyEvent event) {				return false;			}		});				etPassword.addTextChangedListener(new TextWatcher() {			@Override			public void afterTextChanged(Editable s) {				Util.chuanHoaMatKhau(etPassword, this);			}			@Override			public void beforeTextChanged(CharSequence s, int start, int count,					int after) {			}			@Override			public void onTextChanged(CharSequence s, int start, int before,					int count) {			}		});		etConfirmPassword.addTextChangedListener(new TextWatcher() {			@Override			public void afterTextChanged(Editable s) {				Util.chuanHoaMatKhau(etConfirmPassword, this);			}			@Override			public void beforeTextChanged(CharSequence s, int start, int count,					int after) {			}			@Override			public void onTextChanged(CharSequence s, int start, int before,					int count) {			}		});		btn_Registry.setOnClickListener(new View.OnClickListener() {						@Override			public void onClick(View v) {				goNext();			}		});				imageback.setOnClickListener(new View.OnClickListener() {						@Override			public void onClick(View v) {				if (!isBusy) {					startActivity(new Intent(FrmRegistration.this, FrmMain.class));					goBack();				}			}		});				btn_quenMatkhau.setOnClickListener(new View.OnClickListener() {						@Override			public void onClick(View v) {				startActivity(new Intent(FrmRegistration.this, FrmForgotPassword.class));				goBack();			}		});	}	public String getOTP() {		return OTP;	}		public void setOTP(String oTP) {		OTP = oTP;	}	private String getTel() {		return Util.keepNumbersOnly(etTel.getText().toString().trim());	}	private String getPass() {		return Util.keepABCAndNumber(etPassword.getText().toString().trim());	}	private String getConfirmPass() {		return Util.keepABCAndNumber(etConfirmPassword.getText().toString()				.trim());	}	public void checkData() {		sThongBao = "";				if (getTel().equals("")) {			sThongBao = getString(R.string.phai_nhap) + " "					+ getString(R.string.mobile_number);			etTel.requestFocus();		} else if (getTel().length() < Config.iTEL_MIN_LENGTH				|| getTel().length() > Config.iTEL_MAX_LENGTH) {			sThongBao = getString(R.string.mobile_number_wrong0)					+ getString(R.string.nhap_lai);			etTel.requestFocus();		} else if (getPass().equals("")) {			sThongBao = getString(R.string.phai_nhap) + " "					+ getString(R.string.mpin);			etPassword.requestFocus();		} else if (getPass().length() < 6) {			sThongBao = getString(R.string.mpin) + " "					+ getString(R.string.invalid)					+ getString(R.string.nhap_lai);			etPassword.requestFocus();		} else if (!getPass().equals(getConfirmPass())) {			sThongBao = getString(R.string.mpin_notmatch)					+ getString(R.string.nhap_lai);			etConfirmPassword.requestFocus();		} else if (getConfirmPass().equals("")) {				sThongBao = getString(R.string.phai_nhap)						+ getString(R.string.mpin);				etConfirmPassword.requestFocus();		}	}	@Override	public void goNext() {		checkData();		if (sThongBao.equals("")) {			if (User.sIMEI == null || User.sIMEI.equals("")					|| User.sIMEI.equalsIgnoreCase("NULL")) {				try {					User.sIMEI = Util.getIMEI(FrmRegistration.this);				} catch (Exception ex) {				}				if (User.sIMEI == null || User.sIMEI.equals("") || User.sIMEI.equalsIgnoreCase("NULL"))					User.sIMEI = UUID.randomUUID().toString();			}			threadThucThi = new ThreadThucThi(this);			threadThucThi.setIProcess(this, iACTIVE_APP);			threadThucThi.Start();		} else {			onCreateMyDialog(THONG_BAO).show();		}	}		@Override	public void goBack() {		etTel = null;		etPassword = null;		etConfirmPassword = null;		imageback = null;		btn_Registry = null;		btn_quenMatkhau = null;		finish();		super.goBack();		//		if(!User.isRegisted){//			Intent intent = new Intent(this, FrmMain.class);//			intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);//			startActivity(intent);//		}	}		@Override	public void cmdNextXacNhanOTP(String otp) {		setOTP(otp);		threadThucThi = new ThreadThucThi(this);		threadThucThi.setIProcess(this, iXAC_NHAN_OTP);		threadThucThi.Start();		super.cmdNextXacNhanOTP(otp);	}		@Override	public void cmdNextThongBao() {		if(User.isRegisted == true && isFinished == true && isCheckInfo() == false){			startActivity(new Intent(FrmRegistration.this, FrmRegistrationInfo.class));			goBack();		}else 			if(User.isRegisted && isFinished){			User.isFisrt = true;			startActivity(new Intent(FrmRegistration.this, FrmMain.class));			goBack();		}			super.cmdNextThongBao();	}		@Override	public void cmdBackXacNhan() {		if(User.isRegisted && isFinished){			goBack();		}		super.cmdBackXacNhan();	}		// #mark Connect	public void processDataSend(byte iTag) {				switch (iTag) {				case iACTIVE_APP:				ServiceCore.TaskDangKySuDung(getTel(), getPass());			break;					case iXAC_NHAN_OTP:			ServiceCore.TaskActive(getTel(), getOTP(), getPass());			break;		default:			break;		}	}		public void processDataReceived( String dataReceived, byte tag,			byte tagErr) {		isFinished = false;//		dataReceived = "val:0001<><><>";		switch (tag) {			case iACTIVE_APP:				String data = dataReceived.split("<>", -1)[0];				if (data.startsWith("val:")) {					User.setSeqNos(Util.sCatVal(data));					MPlusLib.setKey(getPass());					sThongBao = getTel();					onCreateMyDialog(XAC_NHAN_OTP).show();				} else {					sThongBao = Util.sCatVal(data);					onCreateMyDialog(THONG_BAO).show();				}				break;							case iXAC_NHAN_OTP:				//				dataReceived = "val:Hoang Ha 1|1720292244|13/12/1987|2<><><><><><>AG!3.0|1|null<><>";				if (dataReceived.startsWith("val:")) {					if(!User.MID.endsWith(getTel()) && !"".equals(User.MID)){						User.sID_MENU_MAIN = "0";						User.sID_NEWS = "0";						User.sID_MENU_CARD = "0";						User.sID_MENU_BILL = "0";						User.sID_MENU_TOPUP = "0";						User.sID_MENU_KENH = "0";						User.sID_MENU_QUESTION = "0";						deleteDatabase(DBAdapter.DATABASE_NAME);					}					User.sSMS_SERVERFONE =  ""; //Util.sCatVal(dataReceived);					User.isRegisted = true;					User.isActived = true;					User.isRegNapTien = false;					User.BANK_MID = "";					User.sCustOTP = getOTP();					User.MID = getTel();										String dataRecei[] = Util.sCatVal(dataReceived).split("\\|", -1);					if(dataRecei.length > 0){						User.sCustName = dataRecei[0];					}					if(dataRecei.length > 1){						User.sCustBirthday = dataRecei[1];					}					if(dataRecei.length > 2){						User.sCustCMND = dataRecei[2];					}					if(dataRecei.length > 3){						User.sCustQesID = dataRecei[3];					}										saveUserTable();					sThongBao = Util.insertString(getString(R.string.msg_actived_info_success), new String[]{ Util.getTimeClient3(User.getSrvTime())});					if(isCheckInfo() == false)						sThongBao += getString(R.string.msg_actived_info);										isFinished = true;					onCreateMyDialog(THONG_BAO).show();					break;				}else {					User.setSeqNos("0");//					User.MID = "";					sThongBao = Util.sCatVal(dataReceived);					onCreateMyDialog(THONG_BAO).show();				}		default:			break;		}	}}